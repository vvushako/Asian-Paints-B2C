
package com.ebay.api;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PayPalAPIAAInterface", targetNamespace = "urn:ebay:api:PayPalAPI")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PayPalAPIAAInterface {


    /**
     * 
     * @param requesterCredentials
     * @param doExpressCheckoutPaymentRequest
     * @return
     *     returns com.ebay.api.DoExpressCheckoutPaymentResponseType
     */
    @WebMethod(operationName = "DoExpressCheckoutPayment")
    @WebResult(name = "DoExpressCheckoutPaymentResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoExpressCheckoutPaymentResponse")
    public DoExpressCheckoutPaymentResponseType doExpressCheckoutPayment(
        @WebParam(name = "DoExpressCheckoutPaymentReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoExpressCheckoutPaymentRequest")
        DoExpressCheckoutPaymentReq doExpressCheckoutPaymentRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param doUATPExpressCheckoutPaymentRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.DoUATPExpressCheckoutPaymentResponseType
     */
    @WebMethod(operationName = "DoUATPExpressCheckoutPayment")
    @WebResult(name = "DoUATPExpressCheckoutPaymentResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoUATPExpressCheckoutPaymentResponse")
    public DoUATPExpressCheckoutPaymentResponseType doUATPExpressCheckoutPayment(
        @WebParam(name = "DoUATPExpressCheckoutPaymentReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoUATPExpressCheckoutPaymentRequest")
        DoUATPExpressCheckoutPaymentReq doUATPExpressCheckoutPaymentRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param setAuthFlowParamRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.SetAuthFlowParamResponseType
     */
    @WebMethod(operationName = "SetAuthFlowParam")
    @WebResult(name = "SetAuthFlowParamResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetAuthFlowParamResponse")
    public SetAuthFlowParamResponseType setAuthFlowParam(
        @WebParam(name = "SetAuthFlowParamReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetAuthFlowParamRequest")
        SetAuthFlowParamReq setAuthFlowParamRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param getAuthDetailsRequest
     * @return
     *     returns com.ebay.api.GetAuthDetailsResponseType
     */
    @WebMethod(operationName = "GetAuthDetails")
    @WebResult(name = "GetAuthDetailsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetAuthDetailsResponse")
    public GetAuthDetailsResponseType getAuthDetails(
        @WebParam(name = "GetAuthDetailsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetAuthDetailsRequest")
        GetAuthDetailsReq getAuthDetailsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param setAccessPermissionsRequest
     * @return
     *     returns com.ebay.api.SetAccessPermissionsResponseType
     */
    @WebMethod(operationName = "SetAccessPermissions")
    @WebResult(name = "SetAccessPermissionsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetAccessPermissionsResponse")
    public SetAccessPermissionsResponseType setAccessPermissions(
        @WebParam(name = "SetAccessPermissionsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetAccessPermissionsRequest")
        SetAccessPermissionsReq setAccessPermissionsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param updateAccessPermissionsRequest
     * @return
     *     returns com.ebay.api.UpdateAccessPermissionsResponseType
     */
    @WebMethod(operationName = "UpdateAccessPermissions")
    @WebResult(name = "UpdateAccessPermissionsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "UpdateAccessPermissionsResponse")
    public UpdateAccessPermissionsResponseType updateAccessPermissions(
        @WebParam(name = "UpdateAccessPermissionsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "UpdateAccessPermissionsRequest")
        UpdateAccessPermissionsReq updateAccessPermissionsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param getAccessPermissionDetailsRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.GetAccessPermissionDetailsResponseType
     */
    @WebMethod(operationName = "GetAccessPermissionDetails")
    @WebResult(name = "GetAccessPermissionDetailsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetAccessPermissionDetailsResponse")
    public GetAccessPermissionDetailsResponseType getAccessPermissionDetails(
        @WebParam(name = "GetAccessPermissionDetailsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetAccessPermissionDetailsRequest")
        GetAccessPermissionDetailsReq getAccessPermissionDetailsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param getIncentiveEvaluationRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.GetIncentiveEvaluationResponseType
     */
    @WebMethod(operationName = "GetIncentiveEvaluation")
    @WebResult(name = "GetIncentiveEvaluationResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetIncentiveEvaluationResponse")
    public GetIncentiveEvaluationResponseType getIncentiveEvaluation(
        @WebParam(name = "GetIncentiveEvaluationReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetIncentiveEvaluationRequest")
        GetIncentiveEvaluationReq getIncentiveEvaluationRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param setExpressCheckoutRequest
     * @return
     *     returns com.ebay.api.SetExpressCheckoutResponseType
     */
    @WebMethod(operationName = "SetExpressCheckout")
    @WebResult(name = "SetExpressCheckoutResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetExpressCheckoutResponse")
    public SetExpressCheckoutResponseType setExpressCheckout(
        @WebParam(name = "SetExpressCheckoutReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetExpressCheckoutRequest")
        SetExpressCheckoutReq setExpressCheckoutRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param executeCheckoutOperationsRequest
     * @return
     *     returns com.ebay.api.ExecuteCheckoutOperationsResponseType
     */
    @WebMethod(operationName = "ExecuteCheckoutOperations")
    @WebResult(name = "ExecuteCheckoutOperationsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ExecuteCheckoutOperationsResponse")
    public ExecuteCheckoutOperationsResponseType executeCheckoutOperations(
        @WebParam(name = "ExecuteCheckoutOperationsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ExecuteCheckoutOperationsRequest")
        ExecuteCheckoutOperationsReq executeCheckoutOperationsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param getExpressCheckoutDetailsRequest
     * @return
     *     returns com.ebay.api.GetExpressCheckoutDetailsResponseType
     */
    @WebMethod(operationName = "GetExpressCheckoutDetails")
    @WebResult(name = "GetExpressCheckoutDetailsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetExpressCheckoutDetailsResponse")
    public GetExpressCheckoutDetailsResponseType getExpressCheckoutDetails(
        @WebParam(name = "GetExpressCheckoutDetailsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetExpressCheckoutDetailsRequest")
        GetExpressCheckoutDetailsReq getExpressCheckoutDetailsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param doDirectPaymentRequest
     * @return
     *     returns com.ebay.api.DoDirectPaymentResponseType
     */
    @WebMethod(operationName = "DoDirectPayment")
    @WebResult(name = "DoDirectPaymentResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoDirectPaymentResponse")
    public DoDirectPaymentResponseType doDirectPayment(
        @WebParam(name = "DoDirectPaymentReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoDirectPaymentRequest")
        DoDirectPaymentReq doDirectPaymentRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param managePendingTransactionStatusRequest
     * @return
     *     returns com.ebay.api.ManagePendingTransactionStatusResponseType
     */
    @WebMethod(operationName = "ManagePendingTransactionStatus")
    @WebResult(name = "ManagePendingTransactionStatusResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ManagePendingTransactionStatusResponse")
    public ManagePendingTransactionStatusResponseType managePendingTransactionStatus(
        @WebParam(name = "ManagePendingTransactionStatusReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ManagePendingTransactionStatusRequest")
        ManagePendingTransactionStatusReq managePendingTransactionStatusRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param doCancelRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.DoCancelResponseType
     */
    @WebMethod(operationName = "DoCancel")
    @WebResult(name = "DoCancelResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoCancelResponse")
    public DoCancelResponseType doCancel(
        @WebParam(name = "DoCancelReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoCancelRequest")
        DoCancelReq doCancelRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param doCaptureRequest
     * @return
     *     returns com.ebay.api.DoCaptureResponseType
     */
    @WebMethod(operationName = "DoCapture")
    @WebResult(name = "DoCaptureResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoCaptureResponse")
    public DoCaptureResponseType doCapture(
        @WebParam(name = "DoCaptureReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoCaptureRequest")
        DoCaptureReq doCaptureRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param doReauthorizationRequest
     * @return
     *     returns com.ebay.api.DoReauthorizationResponseType
     */
    @WebMethod(operationName = "DoReauthorization")
    @WebResult(name = "DoReauthorizationResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoReauthorizationResponse")
    public DoReauthorizationResponseType doReauthorization(
        @WebParam(name = "DoReauthorizationReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoReauthorizationRequest")
        DoReauthorizationReq doReauthorizationRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param doVoidRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.DoVoidResponseType
     */
    @WebMethod(operationName = "DoVoid")
    @WebResult(name = "DoVoidResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoVoidResponse")
    public DoVoidResponseType doVoid(
        @WebParam(name = "DoVoidReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoVoidRequest")
        DoVoidReq doVoidRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param doAuthorizationRequest
     * @return
     *     returns com.ebay.api.DoAuthorizationResponseType
     */
    @WebMethod(operationName = "DoAuthorization")
    @WebResult(name = "DoAuthorizationResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoAuthorizationResponse")
    public DoAuthorizationResponseType doAuthorization(
        @WebParam(name = "DoAuthorizationReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoAuthorizationRequest")
        DoAuthorizationReq doAuthorizationRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param updateAuthorizationRequest
     * @return
     *     returns com.ebay.api.UpdateAuthorizationResponseType
     */
    @WebMethod(operationName = "UpdateAuthorization")
    @WebResult(name = "UpdateAuthorizationResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "UpdateAuthorizationResponse")
    public UpdateAuthorizationResponseType updateAuthorization(
        @WebParam(name = "UpdateAuthorizationReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "UpdateAuthorizationRequest")
        UpdateAuthorizationReq updateAuthorizationRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param doUATPAuthorizationRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.DoUATPAuthorizationResponseType
     */
    @WebMethod(operationName = "DoUATPAuthorization")
    @WebResult(name = "DoUATPAuthorizationResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoUATPAuthorizationResponse")
    public DoUATPAuthorizationResponseType doUATPAuthorization(
        @WebParam(name = "DoUATPAuthorizationReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoUATPAuthorizationRequest")
        DoUATPAuthorizationReq doUATPAuthorizationRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param setCustomerBillingAgreementRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.SetCustomerBillingAgreementResponseType
     */
    @WebMethod(operationName = "SetCustomerBillingAgreement")
    @WebResult(name = "SetCustomerBillingAgreementResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetCustomerBillingAgreementResponse")
    public SetCustomerBillingAgreementResponseType setCustomerBillingAgreement(
        @WebParam(name = "SetCustomerBillingAgreementReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "SetCustomerBillingAgreementRequest")
        SetCustomerBillingAgreementReq setCustomerBillingAgreementRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param getBillingAgreementCustomerDetailsRequest
     * @return
     *     returns com.ebay.api.GetBillingAgreementCustomerDetailsResponseType
     */
    @WebMethod(operationName = "GetBillingAgreementCustomerDetails")
    @WebResult(name = "GetBillingAgreementCustomerDetailsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetBillingAgreementCustomerDetailsResponse")
    public GetBillingAgreementCustomerDetailsResponseType getBillingAgreementCustomerDetails(
        @WebParam(name = "GetBillingAgreementCustomerDetailsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetBillingAgreementCustomerDetailsRequest")
        GetBillingAgreementCustomerDetailsReq getBillingAgreementCustomerDetailsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param createBillingAgreementRequest
     * @return
     *     returns com.ebay.api.CreateBillingAgreementResponseType
     */
    @WebMethod(operationName = "CreateBillingAgreement")
    @WebResult(name = "CreateBillingAgreementResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "CreateBillingAgreementResponse")
    public CreateBillingAgreementResponseType createBillingAgreement(
        @WebParam(name = "CreateBillingAgreementReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "CreateBillingAgreementRequest")
        CreateBillingAgreementReq createBillingAgreementRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param doReferenceTransactionRequest
     * @return
     *     returns com.ebay.api.DoReferenceTransactionResponseType
     */
    @WebMethod(operationName = "DoReferenceTransaction")
    @WebResult(name = "DoReferenceTransactionResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoReferenceTransactionResponse")
    public DoReferenceTransactionResponseType doReferenceTransaction(
        @WebParam(name = "DoReferenceTransactionReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoReferenceTransactionRequest")
        DoReferenceTransactionReq doReferenceTransactionRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param createRecurringPaymentsProfileRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.CreateRecurringPaymentsProfileResponseType
     */
    @WebMethod(operationName = "CreateRecurringPaymentsProfile")
    @WebResult(name = "CreateRecurringPaymentsProfileResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "CreateRecurringPaymentsProfileResponse")
    public CreateRecurringPaymentsProfileResponseType createRecurringPaymentsProfile(
        @WebParam(name = "CreateRecurringPaymentsProfileReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "CreateRecurringPaymentsProfileRequest")
        CreateRecurringPaymentsProfileReq createRecurringPaymentsProfileRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param getRecurringPaymentsProfileDetailsRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.GetRecurringPaymentsProfileDetailsResponseType
     */
    @WebMethod(operationName = "GetRecurringPaymentsProfileDetails")
    @WebResult(name = "GetRecurringPaymentsProfileDetailsResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetRecurringPaymentsProfileDetailsResponse")
    public GetRecurringPaymentsProfileDetailsResponseType getRecurringPaymentsProfileDetails(
        @WebParam(name = "GetRecurringPaymentsProfileDetailsReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "GetRecurringPaymentsProfileDetailsRequest")
        GetRecurringPaymentsProfileDetailsReq getRecurringPaymentsProfileDetailsRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param manageRecurringPaymentsProfileStatusRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.ManageRecurringPaymentsProfileStatusResponseType
     */
    @WebMethod(operationName = "ManageRecurringPaymentsProfileStatus")
    @WebResult(name = "ManageRecurringPaymentsProfileStatusResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ManageRecurringPaymentsProfileStatusResponse")
    public ManageRecurringPaymentsProfileStatusResponseType manageRecurringPaymentsProfileStatus(
        @WebParam(name = "ManageRecurringPaymentsProfileStatusReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ManageRecurringPaymentsProfileStatusRequest")
        ManageRecurringPaymentsProfileStatusReq manageRecurringPaymentsProfileStatusRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param billOutstandingAmountRequest
     * @return
     *     returns com.ebay.api.BillOutstandingAmountResponseType
     */
    @WebMethod(operationName = "BillOutstandingAmount")
    @WebResult(name = "BillOutstandingAmountResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "BillOutstandingAmountResponse")
    public BillOutstandingAmountResponseType billOutstandingAmount(
        @WebParam(name = "BillOutstandingAmountReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "BillOutstandingAmountRequest")
        BillOutstandingAmountReq billOutstandingAmountRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param updateRecurringPaymentsProfileRequest
     * @return
     *     returns com.ebay.api.UpdateRecurringPaymentsProfileResponseType
     */
    @WebMethod(operationName = "UpdateRecurringPaymentsProfile")
    @WebResult(name = "UpdateRecurringPaymentsProfileResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "UpdateRecurringPaymentsProfileResponse")
    public UpdateRecurringPaymentsProfileResponseType updateRecurringPaymentsProfile(
        @WebParam(name = "UpdateRecurringPaymentsProfileReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "UpdateRecurringPaymentsProfileRequest")
        UpdateRecurringPaymentsProfileReq updateRecurringPaymentsProfileRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param doNonReferencedCreditRequest
     * @param requesterCredentials
     * @return
     *     returns com.ebay.api.DoNonReferencedCreditResponseType
     */
    @WebMethod(operationName = "DoNonReferencedCredit")
    @WebResult(name = "DoNonReferencedCreditResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoNonReferencedCreditResponse")
    public DoNonReferencedCreditResponseType doNonReferencedCredit(
        @WebParam(name = "DoNonReferencedCreditReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "DoNonReferencedCreditRequest")
        DoNonReferencedCreditReq doNonReferencedCreditRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param reverseTransactionRequest
     * @return
     *     returns com.ebay.api.ReverseTransactionResponseType
     */
    @WebMethod(operationName = "ReverseTransaction")
    @WebResult(name = "ReverseTransactionResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ReverseTransactionResponse")
    public ReverseTransactionResponseType reverseTransaction(
        @WebParam(name = "ReverseTransactionReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ReverseTransactionRequest")
        ReverseTransactionReq reverseTransactionRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

    /**
     * 
     * @param requesterCredentials
     * @param externalRememberMeOptOutRequest
     * @return
     *     returns com.ebay.api.ExternalRememberMeOptOutResponseType
     */
    @WebMethod(operationName = "ExternalRememberMeOptOut")
    @WebResult(name = "ExternalRememberMeOptOutResponse", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ExternalRememberMeOptOutResponse")
    public ExternalRememberMeOptOutResponseType externalRememberMeOptOut(
        @WebParam(name = "ExternalRememberMeOptOutReq", targetNamespace = "urn:ebay:api:PayPalAPI", partName = "ExternalRememberMeOptOutRequest")
        ExternalRememberMeOptOutReq externalRememberMeOptOutRequest,
        @WebParam(name = "RequesterCredentials", targetNamespace = "urn:ebay:api:PayPalAPI", header = true, mode = WebParam.Mode.INOUT, partName = "RequesterCredentials")
        Holder<CustomSecurityHeaderType> requesterCredentials);

}
