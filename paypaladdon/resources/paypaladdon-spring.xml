<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2014 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="paypaladdonCoreDataImportedEventListener" parent="abstractCoreDataImportedEventListener">
		<property name="supportedChannels">
			<list value-type="de.hybris.platform.commerceservices.enums.SiteChannel">
				<value>B2C</value>
				<!--
								<value>B2B</value>
				-->
			</list>
		</property>
		<property name="addonExtensionMetadata">
			<bean class="de.hybris.platform.addonsupport.data.AddonExtensionMetadata">
				<property name="suffixChannel" value="false"/>
				<property name="baseExtensionName" value="paypaladdon"/>
			</bean>
		</property>
	</bean>

	<bean id="paypaladdonSampleDataEventListener" parent="abstractGenericAddOnSampleDataEventListener"  >
		<property name="extensionName" value="paypaladdon" />
	</bean>

<!--	<bean id="paypalConvertersMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry>
					<key>
						<value type="java.lang.Class">com.ebay.api.SetExpressCheckoutReq</value>
					</key>
					<ref bean="setExprCheckReqDataConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.paypal.hybris.data.SetExpressCheckoutResultData</value>
					</key>
					<ref bean="setExprCheckResConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.ebay.api.GetExpressCheckoutDetailsReq</value>
					</key>
					<ref bean="getExprCheckDetReqDataConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.paypal.hybris.data.GetExpressCheckoutDetailsResultData</value>
					</key>
					<ref bean="getExprCheckDetResConverter"/>
				</entry>

				<entry>
					<key>
						<value type="java.lang.Class">com.ebay.api.DoExpressCheckoutPaymentReq</value>
					</key>
					<ref bean="doExprCheckPaymentReqDataConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.paypal.hybris.data.DoExpressCheckoutPaymentResultData</value>
					</key>
					<ref bean="doExprCheckPaymentResConverter"/>
				</entry>


				<entry>
					<key>
						<value type="java.lang.Class">com.ebay.api.DoAuthorizationReq</value>
					</key>
					<ref bean="doAuthReqDataConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.paypal.hybris.data.DoAuthorizationResultData</value>
					</key>
					<ref bean="doAuthResConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.ebay.api.DoCaptureReq</value>
					</key>
					<ref bean="doCaptReqDataConverter"/>
				</entry>
				<entry>
					<key>
						<value type="java.lang.Class">com.paypal.hybris.data.DoCaptureResultData</value>
					</key>
					<ref bean="doCaptResConverter"/>
				</entry>
			</map>
		</constructor-arg>
	</bean>-->
	
	<alias name="defaultPaypalPaymentInfoConverter" alias="paypalPaymentInfoConverter"/>
	<bean id="defaultPaypalPaymentInfoConverter" parent="abstractPopulatingConverter">
		<property name="targetClass" value="de.hybris.platform.commercefacades.order.data.CCPaymentInfoData"/>
		<property name="populators">
			<list>
				<ref bean="paypalPaymentInfoPopulator"/>
			</list>
		</property>
	</bean>
	
	<alias name="defaultPaypalPaymentInfoPopulator" alias="paypalPaymentInfoPopulator"/>
	<bean id="defaultPaypalPaymentInfoPopulator"
			class="com.paypal.hybris.converters.populators.impl.PaypalPaymentInfoPopulator">
		<property name="addressConverter" ref="addressConverter"/>
		<property name="priceDataFactory" ref="priceDataFactory"/>
	</bean>

	<alias name="payPalCheckoutFacade" alias="acceleratorCheckoutFacade" />
	<bean id="payPalCheckoutFacade" class="com.paypal.hybris.addon.facades.PayPalCheckoutFacade" parent="defaultAcceleratorCheckoutFacade">
		<property name="paypalPaymentInfoConverter" ref="paypalPaymentInfoConverter"/>
		<property name="configurationService" ref="configurationService"/>
        <property name="sessionService" ref="sessionService"/>
        <property name="uiExperienceService" ref="uiExperienceService"/>
	</bean>

	<alias name="paypalCheckoutFlowFacade" alias="checkoutFlowFacade"/>
	<bean id="paypalCheckoutFlowFacade" parent="defaultCheckoutFlowFacade">
		<replaced-method name="getPaymentDetails" replacer="replacedPaypalCheckoutFlowReplacer"></replaced-method>
	</bean>
	
	<bean name="replacedPaypalCheckoutFlowReplacer" class="com.paypal.hybris.addon.facades.PayPalCheckoutFlowReplacer">
		<property name="creditCardPaymentInfoConverter" ref="creditCardPaymentInfoConverter"/>
		<property name="paypalPaymentInfoConverter" ref="paypalPaymentInfoConverter"/>
		<property name="cartService" ref="cartService"/>
	</bean>
	
	<alias name="paypalOrderPopulator" alias="orderPopulator"/>
	<bean id="paypalOrderPopulator"
			class="com.paypal.hybris.addon.facades.order.converters.populator.PayPalOrderPopulator"
			parent="defaultOrderPopulator">
			<property name="paypalPaymentInfoConverter" ref="paypalPaymentInfoConverter"/>
	</bean>

	<!--Changing mapping for Order Status display value for PAYMENT_NOT_CAPTURED-->
	<bean id="addToOrderStatusDisplay" depends-on="dynamicAttributesOrderStatusDisplay" parent="mapMergeDirective">
		<property name="fieldName" value="statusDisplayMap" />
		<property name="key" value="PAYMENT_NOT_CAPTURED" />
		<property name="value" value="processing" />
	</bean>
	
</beans>
